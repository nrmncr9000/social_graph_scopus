{"version":3,"sources":["pages/SocialGraph.js","variables/data.js","App.js","serviceWorker.js","index.js"],"names":["G6Graph","graphData","graph","ref","useRef","authors","useState","author","setAuthor","useEffect","G6","Graph","container","current","width","scrollWidth","height","modes","default","type","formatText","model","affilationName","offset","defaultNode","style","fill","stroke","lineWidth","labelCfg","position","refX","fontSize","defaultEdge","opacity","autoRotate","nodeStateStyles","active","inactive","edgeStateStyles","layout","preventOverlap","linkDistance","nodeSpacing","alpha","refreshDragedNodePosition","a","e","item","get","fx","x","fy","y","data","render","forceLayout","layoutMethod","on","execute","nodeItem","setItemState","findAllByState","forEach","node","updateItem","findAll","main","destroy","Jumbotron","className","Container","Row","ButtonGroup","size","Button","variant","onClick","social_graph_data","Saltykova","nodes","id","label","affid","affilationNamel","edges","source","target","Rakitskiy","App","SocialGraph","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+VA2LeA,MAnLf,YAAiC,IAAdC,EAAa,EAAbA,UACbC,EAAQ,KACNC,EAAMC,iBAAO,MACbC,EAAU,CAAC,YAAa,aAHA,EAIFC,mBAASD,EAAQ,IAJf,mBAIvBE,EAJuB,KAIfC,EAJe,KAkJ9B,OA5IAC,qBAAU,WAuIR,OAtIKP,IAEHA,EAAQ,IAAIQ,IAAGC,MAAM,CACnBC,UAAWT,EAAIU,QACfC,MAAOX,EAAIU,QAAQE,YACnBC,OAAQ,IACRC,MAAO,CACLC,QAAS,CACP,cACA,cACA,YACA,CAAEC,KAAM,sBACR,CACEA,KAAM,UACNC,WAAY,SAAoBC,GAE9B,MADU,0BAAsBA,EAAMC,iBAGxCC,OAAQ,KAIdC,YAAa,CACXC,MAAO,CACLC,KAAM,UACNC,OAAQ,UACRC,UAAW,GAEbC,SAAU,CACRC,SAAU,MACVC,KAAM,GACNN,MAAO,CACLC,KAAM,OACNM,SAAU,MAIhBC,YAAa,CACXR,MAAO,CACLS,QAAS,IACTP,OAAQ,OACRC,UAAW,GAEbC,SAAU,CACRM,YAAY,IAGhBC,gBAAiB,CACfC,OAAQ,CACNH,QAAS,GAEXI,SAAU,CACRJ,QAAS,MAGbK,gBAAiB,CACfF,OAAQ,CACNV,OAAQ,OACRO,QAAS,GACTN,UAAW,GAEbU,SAAU,CACRJ,QAAS,IACTN,UAAW,IAGfY,OAAQ,CACNrB,KAAM,QACNsB,gBAAgB,EAChBC,aAAc,GACdC,YAAa,GACbC,MAAO,QAKH,uCAAG,mBAmDFC,EAnDE,SAAAC,EAAA,sDAmDFD,EAnDE,SAmDwBE,GACjC,IAAM1B,EAAQ0B,EAAEC,KAAKC,IAAI,SACzB5B,EAAM6B,GAAKH,EAAEI,EACb9B,EAAM+B,GAAKL,EAAEM,GArDfnD,EAAMoD,KAAKrD,EAAUM,IACrBL,EAAMqD,SACAC,EAActD,EAAM+C,IAAI,oBAAoBQ,aAClDvD,EAAMwD,GAAG,kBAAkB,SAAUX,GACnC7C,EAAMsC,SACNK,EAA0BE,MAE5B7C,EAAMwD,GAAG,aAAa,SAAUX,GAC9BS,EAAYG,UACZd,EAA0BE,MAE5B7C,EAAMwD,GAAG,gBAAgB,SAAUX,GACjCA,EAAEC,KAAKC,IAAI,SAASC,GAAK,KACzBH,EAAEC,KAAKC,IAAI,SAASG,GAAK,QAE3BlD,EAAMwD,GAAG,mBAAmB,SAACX,GAC3B,IAAMa,EAAWb,EAAEC,KACnB9C,EAAM2D,aAAaD,EAAU,UAAU,GACzB1D,EAAM4D,eAAe,OAAQ,YACrCC,SAAQ,SAACC,GACb9D,EAAM+D,WAAWD,EAAM,CACrBnC,SAAU,CACRJ,MAAO,CACLS,QAAS,IACTR,KAAM,OACNM,SAAU,aAMpB9B,EAAMwD,GAAG,mBAAmB,SAACX,GAC3B,IAAMa,EAAWb,EAAEC,KACnB9C,EAAM2D,aAAaD,EAAU,UAAU,GACzB1D,EAAMgE,QAAQ,QAAQ,SAACF,GACnC,OAAOA,KAEHD,SAAQ,SAACC,GACb9D,EAAM+D,WAAWD,EAAM,CACrBnC,SAAU,CACRJ,MAAO,CACLS,QAAS,EACTR,KAAM,OACNM,SAAU,aA5CT,2CAAH,oDAyDVmC,GACO,WACLjE,EAAMkE,aAEP,CAAC7D,IAGF,kBAAC8D,EAAA,EAAD,KACE,qHACA,uFACa,gCAAS9D,IAEtB,2BACE,yBAAK+D,UAAU,QAAQnE,IAAKA,KAE9B,kBAACoE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKF,UAAU,6BACb,kBAACG,EAAA,EAAD,CAAaC,KAAK,MAChB,kBAACC,EAAA,EAAD,CACEL,UAAU,MACVM,QAAQ,oBACRC,QAAS,kBAAMrE,EAAUH,EAAQ,MAEhCA,EAAQ,IAEX,kBAACsE,EAAA,EAAD,CACEL,UAAU,MACVM,QAAQ,oBACRC,QAAS,kBAAMrE,EAAUH,EAAQ,MAEhCA,EAAQ,SCiERyE,EALW,CACxBC,UA/OgB,CAChBC,MAAO,CACL,CACEC,GAAI,aACJC,MAAO,iBACPC,MAAO,WACP7D,eAAgB,iCAElB,CACE2D,GAAI,cACJC,MAAO,sBACPC,MAAO,WACP7D,eAAgB,sDAElB,CACE2D,GAAI,cACJC,MAAO,iBACPC,MAAO,MACP7D,eAAgB,kBAElB,CACE2D,GAAI,cACJC,MAAO,gBACPC,MAAO,WACP7D,eAAgB,sDAElB,CACE2D,GAAI,cACJC,MAAO,eACPC,MAAO,WACP7D,eAAgB,sDAElB,CACE2D,GAAI,cACJC,MAAO,aACPC,MAAO,YACPC,gBAAiB,+BAEnB,CACEH,GAAI,cACJC,MAAO,iBACPC,MAAO,WACP7D,eAAgB,sDAElB,CACE2D,GAAI,cACJC,MAAO,gBACPC,MAAO,WACP7D,eAAgB,4BAElB,CACE2D,GAAI,aACJC,MAAO,cACPC,MAAO,WACP7D,eAAgB,sDAElB,CACE2D,GAAI,cACJC,MAAO,cACPC,MAAO,WACP7D,eAAgB,sDAElB,CACE2D,GAAI,cACJC,MAAO,eACPC,MAAO,WACP7D,eAAgB,sDAElB,CACE2D,GAAI,cACJC,MAAO,eACPC,MAAO,WACP7D,eAAgB,sDAElB,CACE2D,GAAI,aACJC,MAAO,eACPC,MAAO,WACP7D,eAAgB,iCAElB,CACE2D,GAAI,cACJC,MAAO,eACPC,MAAO,WACP7D,eAAgB,sDAElB,CACE2D,GAAI,cACJC,MAAO,cACPC,MAAO,WACP7D,eAAgB,sDAElB,CACE2D,GAAI,cACJC,MAAO,iBACPC,MAAO,WACPT,KAAM,KACNpD,eAAgB,sDAElB,CACE2D,GAAI,cACJC,MAAO,eACPC,MAAO,WACP7D,eAAgB,gCAElB,CACE2D,GAAI,cACJC,MAAO,gBACPC,MAAO,MACP7D,eAAgB,kBAElB,CACE2D,GAAI,cACJC,MAAO,eACPC,MAAO,WACP7D,eAAgB,sDAElB,CACE2D,GAAI,cACJC,MAAO,eACPC,MAAO,WACP7D,eAAgB,gCAElB,CACE2D,GAAI,cACJC,MAAO,cACPC,MAAO,WACP7D,eAAgB,sDAElB,CACE2D,GAAI,cACJC,MAAO,gBACPC,MAAO,YACPC,gBAAiB,+BAEnB,CACEH,GAAI,cACJC,MAAO,iBACPC,MAAO,WACP7D,eAAgB,sDAElB,CACE2D,GAAI,aACJC,MAAO,kBACPC,MAAO,WACP7D,eAAgB,sDAElB,CACE2D,GAAI,cACJC,MAAO,eACPC,MAAO,WACP7D,eAAgB,sDAElB,CACE2D,GAAI,cACJC,MAAO,iBACPC,MAAO,WACP7D,eAAgB,gCAElB,CACE2D,GAAI,cACJC,MAAO,gBACPC,MAAO,WACP7D,eAAgB,sDAElB,CACE2D,GAAI,cACJC,MAAO,eACPC,MAAO,WACP7D,eAAgB,uDAGpB+D,MAAO,CACL,CAAEC,OAAQ,cAAeC,OAAQ,cACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,cACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,cACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,cACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,iBAyCnCC,UArCgB,CAChBR,MAAO,CACL,CACEC,GAAI,aACJC,MAAO,aACPC,MAAO,WACP7D,eAAgB,sCAElB,CACE2D,GAAI,cACJC,MAAO,iBACPC,MAAO,WACP7D,eAAgB,qCAChBoD,KAAM,MAER,CACEO,GAAI,cACJC,MAAO,kBACPC,MAAO,WACP7D,eAAgB,sCAElB,CACE2D,GAAI,cACJC,MAAO,eACPC,MAAO,WACP7D,eAAgB,uCAGpB+D,MAAO,CACL,CAAEC,OAAQ,cAAeC,OAAQ,cACjC,CAAED,OAAQ,cAAeC,OAAQ,eACjC,CAAED,OAAQ,cAAeC,OAAQ,kBC5NtBE,MARf,WACE,OACE,yBAAKnB,UAAU,OACb,kBAACoB,EAAD,CAAazF,UAAWqD,MCGVqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASzC,OACP,kBAAC,IAAM0C,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f32f0bf0.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport G6 from \"@antv/g6\";\r\n\r\nfunction G6Graph({ graphData }) {\r\n  let graph = null;\r\n  const ref = useRef(null);\r\n  const authors = [\"Saltykova\", \"Rakitskiy\"];\r\n  const [author, setAuthor] = useState(authors[0]);\r\n\r\n  useEffect(() => {\r\n    if (!graph) {\r\n      // eslint-disable-next-line\r\n      graph = new G6.Graph({\r\n        container: ref.current,\r\n        width: ref.current.scrollWidth,\r\n        height: 600,\r\n        modes: {\r\n          default: [\r\n            \"drag-canvas\",\r\n            \"zoom-canvas\",\r\n            \"drag-node\",\r\n            { type: \"activate-relations\" },\r\n            {\r\n              type: \"tooltip\",\r\n              formatText: function formatText(model) {\r\n                const text = `Afflation Name: ${model.affilationName}`;\r\n                return text;\r\n              },\r\n              offset: 5,\r\n            },\r\n          ],\r\n        },\r\n        defaultNode: {\r\n          style: {\r\n            fill: \"#3ae8a0\",\r\n            stroke: \"#5e5e5e\",\r\n            lineWidth: 1,\r\n          },\r\n          labelCfg: {\r\n            position: \"top\",\r\n            refX: 15,\r\n            style: {\r\n              fill: \"#fff\",\r\n              fontSize: 18,\r\n            },\r\n          },\r\n        },\r\n        defaultEdge: {\r\n          style: {\r\n            opacity: 0.75,\r\n            stroke: \"grey\",\r\n            lineWidth: 2,\r\n          },\r\n          labelCfg: {\r\n            autoRotate: true,\r\n          },\r\n        },\r\n        nodeStateStyles: {\r\n          active: {\r\n            opacity: 1,\r\n          },\r\n          inactive: {\r\n            opacity: 0.15,\r\n          },\r\n        },\r\n        edgeStateStyles: {\r\n          active: {\r\n            stroke: \"#999\",\r\n            opacity: 0.8,\r\n            lineWidth: 3,\r\n          },\r\n          inactive: {\r\n            opacity: 0.15,\r\n            lineWidth: 1,\r\n          },\r\n        },\r\n        layout: {\r\n          type: \"force\",\r\n          preventOverlap: true,\r\n          linkDistance: 20,\r\n          nodeSpacing: 60,\r\n          alpha: 0.05,\r\n        },\r\n      });\r\n    }\r\n\r\n    const main = async () => {\r\n      graph.data(graphData[author]);\r\n      graph.render();\r\n      const forceLayout = graph.get(\"layoutController\").layoutMethod;\r\n      graph.on(\"node:dragstart\", function (e) {\r\n        graph.layout();\r\n        refreshDragedNodePosition(e);\r\n      });\r\n      graph.on(\"node:drag\", function (e) {\r\n        forceLayout.execute();\r\n        refreshDragedNodePosition(e);\r\n      });\r\n      graph.on(\"node:dragend\", function (e) {\r\n        e.item.get(\"model\").fx = null;\r\n        e.item.get(\"model\").fy = null;\r\n      });\r\n      graph.on(\"node:mouseenter\", (e) => {\r\n        const nodeItem = e.item;\r\n        graph.setItemState(nodeItem, \"active\", true);\r\n        const nodes = graph.findAllByState(\"node\", \"inactive\");\r\n        nodes.forEach((node) => {\r\n          graph.updateItem(node, {\r\n            labelCfg: {\r\n              style: {\r\n                opacity: 0.15,\r\n                fill: \"#fff\",\r\n                fontSize: 18,\r\n              },\r\n            },\r\n          });\r\n        });\r\n      });\r\n      graph.on(\"node:mouseleave\", (e) => {\r\n        const nodeItem = e.item;\r\n        graph.setItemState(nodeItem, \"active\", false);\r\n        const nodes = graph.findAll(\"node\", (node) => {\r\n          return node;\r\n        });\r\n        nodes.forEach((node) => {\r\n          graph.updateItem(node, {\r\n            labelCfg: {\r\n              style: {\r\n                opacity: 1,\r\n                fill: \"#fff\",\r\n                fontSize: 18,\r\n              },\r\n            },\r\n          });\r\n        });\r\n      });\r\n\r\n      function refreshDragedNodePosition(e) {\r\n        const model = e.item.get(\"model\");\r\n        model.fx = e.x;\r\n        model.fy = e.y;\r\n      }\r\n    };\r\n    main();\r\n    return () => {\r\n      graph.destroy();\r\n    };\r\n  }, [author]);\r\n\r\n  return (\r\n    <Jumbotron>\r\n      <h1>Социальный граф</h1>\r\n      <h3>\r\n        Для автора <strong>{author}</strong>\r\n      </h3>\r\n      <p>\r\n        <div className=\"graph\" ref={ref}></div>\r\n      </p>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <ButtonGroup size=\"lg\">\r\n            <Button\r\n              className=\"btn\"\r\n              variant=\"outline-secondary\"\r\n              onClick={() => setAuthor(authors[0])}\r\n            >\r\n              {authors[0]}\r\n            </Button>\r\n            <Button\r\n              className=\"btn\"\r\n              variant=\"outline-secondary\"\r\n              onClick={() => setAuthor(authors[1])}\r\n            >\r\n              {authors[1]}\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Row>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n}\r\n\r\nexport default G6Graph;\r\n","const Saltykova = {\r\n  nodes: [\r\n    {\r\n      id: \"7007114678\",\r\n      label: \"Awrejcewicz J.\",\r\n      affid: \"60016104\",\r\n      affilationName: \"Lodz University of Technology\",\r\n    },\r\n    {\r\n      id: \"55568395800\",\r\n      label: \"Chebotyrevskiy Y.B.\",\r\n      affid: \"60013984\",\r\n      affilationName: \"Yuri Gagarin State Technical University of Saratov\",\r\n    },\r\n    {\r\n      id: \"35363741400\",\r\n      label: \"Desyatova A.S.\",\r\n      affid: \"nan\",\r\n      affilationName: \"No Information\",\r\n    },\r\n    {\r\n      id: \"55979817300\",\r\n      label: \"Dobriyan V.V.\",\r\n      affid: \"60013984\",\r\n      affilationName: \"Yuri Gagarin State Technical University of Saratov\",\r\n    },\r\n    {\r\n      id: \"57188683427\",\r\n      label: \"Erofeev N.P.\",\r\n      affid: \"60013984\",\r\n      affilationName: \"Yuri Gagarin State Technical University of Saratov\",\r\n    },\r\n    {\r\n      id: \"57207317749\",\r\n      label: \"Karas A.Y.\",\r\n      affid: \"123953536\",\r\n      affilationNamel: \"Medical Center of Neurology\",\r\n    },\r\n    {\r\n      id: \"57194235540\",\r\n      label: \"Kruzhilin V.S.\",\r\n      affid: \"60013984\",\r\n      affilationName: \"Yuri Gagarin State Technical University of Saratov\",\r\n    },\r\n    {\r\n      id: \"56288336500\",\r\n      label: \"Krylova E.Yu.\",\r\n      affid: \"60068671\",\r\n      affilationName: \"Saratov State University\",\r\n    },\r\n    {\r\n      id: \"6508391995\",\r\n      label: \"Krysko A.V.\",\r\n      affid: \"60013984\",\r\n      affilationName: \"Yuri Gagarin State Technical University of Saratov\",\r\n    },\r\n    {\r\n      id: \"57216243328\",\r\n      label: \"Krysko V.A.\",\r\n      affid: \"60013984\",\r\n      affilationName: \"Yuri Gagarin State Technical University of Saratov\",\r\n    },\r\n    {\r\n      id: \"55979305600\",\r\n      label: \"Krys'ko V.A.\",\r\n      affid: \"60013984\",\r\n      affilationName: \"Yuri Gagarin State Technical University of Saratov\",\r\n    },\r\n    {\r\n      id: \"55668477800\",\r\n      label: \"Kutepov I.E.\",\r\n      affid: \"60013984\",\r\n      affilationName: \"Yuri Gagarin State Technical University of Saratov\",\r\n    },\r\n    {\r\n      id: \"6603126141\",\r\n      label: \"Mrozowski J.\",\r\n      affid: \"60016104\",\r\n      affilationName: \"Lodz University of Technology\",\r\n    },\r\n    {\r\n      id: \"25629941900\",\r\n      label: \"Papkova I.V.\",\r\n      affid: \"60013984\",\r\n      affilationName: \"Yuri Gagarin State Technical University of Saratov\",\r\n    },\r\n    {\r\n      id: \"56095946300\",\r\n      label: \"Pavlov S.P.\",\r\n      affid: \"60013984\",\r\n      affilationName: \"Yuri Gagarin State Technical University of Saratov\",\r\n    },\r\n    {\r\n      id: \"25923043300\",\r\n      label: \"Saltykova O.A.\",\r\n      affid: \"60013984\",\r\n      size: \"50\",\r\n      affilationName: \"Yuri Gagarin State Technical University of Saratov\",\r\n    },\r\n    {\r\n      id: \"55875229500\",\r\n      label: \"Shklyar A.V.\",\r\n      affid: \"60024069\",\r\n      affilationName: \"Tomsk Polytechnic University\",\r\n    },\r\n    {\r\n      id: \"35307859000\",\r\n      label: \"Soldatov V.V.\",\r\n      affid: \"nan\",\r\n      affilationName: \"No Information\",\r\n    },\r\n    {\r\n      id: \"57208861965\",\r\n      label: \"Stasyuk M.M.\",\r\n      affid: \"60013984\",\r\n      affilationName: \"Yuri Gagarin State Technical University of Saratov\",\r\n    },\r\n    {\r\n      id: \"15849399800\",\r\n      label: \"Vekhter E.V.\",\r\n      affid: \"60024069\",\r\n      affilationName: \"Tomsk Polytechnic University\",\r\n    },\r\n    {\r\n      id: \"57191038876\",\r\n      label: \"Vetsel S.S.\",\r\n      affid: \"60013984\",\r\n      affilationName: \"Yuri Gagarin State Technical University of Saratov\",\r\n    },\r\n    {\r\n      id: \"57213825996\",\r\n      label: \"Yakovlev N.M.\",\r\n      affid: \"123953536\",\r\n      affilationNamel: \"Medical Center of Neurology\",\r\n    },\r\n    {\r\n      id: \"56435768900\",\r\n      label: \"Yakovleva T.V.\",\r\n      affid: \"60013984\",\r\n      affilationName: \"Yuri Gagarin State Technical University of Saratov\",\r\n    },\r\n    {\r\n      id: \"6603201233\",\r\n      label: \"Yaroshenko T.Y.\",\r\n      affid: \"60013984\",\r\n      affilationName: \"Yuri Gagarin State Technical University of Saratov\",\r\n    },\r\n    {\r\n      id: \"57211265744\",\r\n      label: \"Yu Petrov D.\",\r\n      affid: \"60013984\",\r\n      affilationName: \"Yuri Gagarin State Technical University of Saratov\",\r\n    },\r\n    {\r\n      id: \"57193934812\",\r\n      label: \"Zakharova A.A.\",\r\n      affid: \"60024069\",\r\n      affilationName: \"Tomsk Polytechnic University\",\r\n    },\r\n    {\r\n      id: \"25923214900\",\r\n      label: \"Zhigalov M.V.\",\r\n      affid: \"60013984\",\r\n      affilationName: \"Yuri Gagarin State Technical University of Saratov\",\r\n    },\r\n    {\r\n      id: \"57211638009\",\r\n      label: \"Zigalov M.V.\",\r\n      affid: \"60013984\",\r\n      affilationName: \"Yuri Gagarin State Technical University of Saratov\",\r\n    },\r\n  ],\r\n  edges: [\r\n    { source: \"25923043300\", target: \"7007114678\" },\r\n    { source: \"25923043300\", target: \"55568395800\" },\r\n    { source: \"25923043300\", target: \"35363741400\" },\r\n    { source: \"25923043300\", target: \"55979817300\" },\r\n    { source: \"25923043300\", target: \"57188683427\" },\r\n    { source: \"25923043300\", target: \"57207317749\" },\r\n    { source: \"25923043300\", target: \"57194235540\" },\r\n    { source: \"25923043300\", target: \"56288336500\" },\r\n    { source: \"25923043300\", target: \"6508391995\" },\r\n    { source: \"25923043300\", target: \"57216243328\" },\r\n    { source: \"25923043300\", target: \"55979305600\" },\r\n    { source: \"25923043300\", target: \"55668477800\" },\r\n    { source: \"25923043300\", target: \"6603126141\" },\r\n    { source: \"25923043300\", target: \"25629941900\" },\r\n    { source: \"25923043300\", target: \"56095946300\" },\r\n    { source: \"25923043300\", target: \"55875229500\" },\r\n    { source: \"25923043300\", target: \"35307859000\" },\r\n    { source: \"25923043300\", target: \"57208861965\" },\r\n    { source: \"25923043300\", target: \"15849399800\" },\r\n    { source: \"25923043300\", target: \"57191038876\" },\r\n    { source: \"25923043300\", target: \"57213825996\" },\r\n    { source: \"25923043300\", target: \"56435768900\" },\r\n    { source: \"25923043300\", target: \"6603201233\" },\r\n    { source: \"25923043300\", target: \"57211265744\" },\r\n    { source: \"25923043300\", target: \"57193934812\" },\r\n    { source: \"25923043300\", target: \"25923214900\" },\r\n    { source: \"25923043300\", target: \"57211638009\" },\r\n  ],\r\n};\r\n\r\nconst Rakitskiy = {\r\n  nodes: [\r\n    {\r\n      id: \"6602583861\",\r\n      label: \"Belim S.V.\",\r\n      affid: \"60031116\",\r\n      affilationName: \"Omskij Gosudarstvennyj Universitet\",\r\n    },\r\n    {\r\n      id: \"57192170409\",\r\n      label: \"Rakitskiy Y.S.\",\r\n      affid: \"60031116\",\r\n      affilationName: \"Omskij Gosudarstvennyj Universitet\",\r\n      size: \"50\",\r\n    },\r\n    {\r\n      id: \"56976448000\",\r\n      label: \"Bogachenko N.F.\",\r\n      affid: \"60031116\",\r\n      affilationName: \"Omskij Gosudarstvennyj Universitet\",\r\n    },\r\n    {\r\n      id: \"26530548500\",\r\n      label: \"Kabanov A.N.\",\r\n      affid: \"60031116\",\r\n      affilationName: \"Omskij Gosudarstvennyj Universitet\",\r\n    },\r\n  ],\r\n  edges: [\r\n    { source: \"57192170409\", target: \"6602583861\" },\r\n    { source: \"57192170409\", target: \"56976448000\" },\r\n    { source: \"57192170409\", target: \"26530548500\" },\r\n  ],\r\n};\r\n\r\nconst social_graph_data = {\r\n  Saltykova,\r\n  Rakitskiy,\r\n};\r\n\r\nexport default social_graph_data;\r\n","import React from \"react\";\nimport \"./App.scss\";\n\nimport SocialGraph from \"../src/pages/SocialGraph\";\nimport data from \"../src/variables/data\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SocialGraph graphData={data}></SocialGraph>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}